Importante para conexão

1- Liberar acesso ao cluster em postgresql.conf

2- Liberar acesso ao cluster para o usuário do banco de dados em pg_hba.conf

3- Criar/editar usuários
________________________________________________________________________________________________________________________
                                                CONCEITOS

    USERS /ROLES /GROUPS
Roles (papéis ou funções), users (usuários) e grupo de usuários são "contas", prefis de atuação em um banco de dados,
que possuem permissões em comum ou específicas.

Nas Versões anteriores do PostgreSQL 8.1, usuários e roles tinham comportamentos diferentes. Atualmente, roles e users
são alias.
É possível que roles pertençam a outras roles.


CREATE ROLE name [[WITH] option [...]]
where option can be:
|   SUPERUSER       |       NOSUPERUSER
|   CREATEDB        |       NOCREATEDB
|   CREATEROLE      |       NOCREATEROLE
|   INHERIT         |       NOINHERIT
|   LOGIN           |       NOLOGIN
|   REPLICATION     |       NOREPLICATION
|   BYPASSRLS       |       NOBYPASSRLS
|   CONNECTION LIMIT connlimit
|   [ENCRYPTED]PASSWORD 'password'  |   PASSWORD NULL
|   VALID UNTIL 'timestamp'
|   IN ROLE role_name[,...]
|   IN GROUP role_name[,...]
|   ROLE role_name[,...]
|   ADMIN role_name[,...]
|   USER role_name[,...]
|   SYSID uid


Exemplos:

CREATE ROLE administradores         CREATE ROLE professores         CREATE ROLE alunos
CREATEDB                            NOCREATEDB                      NOCREATEDB
CREATEROLE                          NOCREATEROLE                    NOCREATEROLE
INHERIT                             INHERIT                         INHERIT
NOLOGIN                             NOLOGIN                         NOLOGIN
REPLICATION                         NOBYPASSRLS                     NOBYPASSRLS
BYPASSRLS                           CONNECTION LIMIT 10;            CONNECTION LIMIT 90;
CONNECTION LIMIT -1;

________________________________________________________________________________________________________________________
                                                ADMINISTRANDO
ASSOCIAÇÃO ENTRE ROLES
Quando uma role assume permissões de outra role. Necessário a opção INHERIT.

No momento da criação da role:
* IN ROLE (passa a pertecer a role informada)
* ROLE (a role informada passa a pertencer a nova role)

ou apos a criação da role:
* GRANT [role a ser concedida] TO [role a assumir as permissões]

CREATE ROLE professores
NOCREATEDB
NOCREATEROLE
INHERIT
NOLOGIN
NOBYPASSRLS
CONNECTION LIMIT -1;

CREATE ROLE daniel LOGIN CONNECTION LIMIT 1 PASSWORD '123' IN ROLE professores;
-> A role daniel passa a assumir as permissoes da role professores.

CREATE ROLE daniel LOGIN CONNECTION LIMIT 1 PASSWORD '123' ROLE professores;
-> A role professores passa a fazer parte da role daniel assumindo suas permissoes.

CREATE ROLE daniel LOGIN CONNECTION LIMIT 1 PASSWORD '123';
GRANT professores TO daniel;


DESASSOCIAÇÃO ENTRE ROLES

REVOKE [role que será revogada] FROM [role que terá suas permissões revogadas]
REVOKE professores FROM daniel;


ALTERAÇÃO DE ROLE

ALTER ROLE role-specification [WITH] option [...]
where option can be:
|   SUPERUSER       |       NOSUPERUSER
|   CREATEDB        |       NOCREATEDB
|   CREATEROLE      |       NOCREATEROLE
|   INHERIT         |       NOINHERIT
|   LOGIN           |       NOLOGIN
|   REPLICATION     |       NOREPLICATION
|   BYPASSRLS       |       NOBYPASSRLS
|   CONNECTION LIMIT connlimit
|   [ENCRYPTED]PASSWORD 'password'  |   PASSWORD NULL
|   VALID UNTIL 'timestamp'


EXCLUSÃO DE ROLE

DROP ROLE role_specification;

________________________________________________________________________________________________________________________
                                                ADMINISTRANDO ACESSOS

GRANT
São os privilégios de acesso aos objetos do banco de dados.

PRIVILÉGIOS:
--tabela                --function
--coluna                --language
--sequence              --large object
--database              --schema
--domain                --tablespace
--foreign data wrapper  --type
--foreign server


DATABASE
GRANT {{CREATE | CONNECT | TEMPORARY | TEMP} [,...] | ALL [PRIVILEGES]}
    ON DATABASE database_name[,...]
    TO role_specification[,...][WITH GRANT OPTION]

SCHEMA
GRANT {{CREATE | USAGE} [,...] | ALL [PRIVILEGES]}
    ON SCHEMA database_name[,...]
    TO role_specification[,...][WITH GRANT OPTION]

TABLE
GRANT {{SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER} [,...] | ALL [PRIVILEGES]}
    ON {[TABLE] table_name[,...] | ALL TABLES IN SCHEMA [,...] }
    TO role_specification[,...][WITH GRANT OPTION]


REVOKE
Retira as permissões da role

DATABASE
REVOKE [GRANT OPTION FOR]
    {{CREATE | CONNECT TEMPORARY | TEMP} [,...] | ALL [PRIVILEGES]}
    ON DATABASE database_name [,...]
    FROM {[GROUP] role_name | PUBLIC }[,...]
    [CASCADE | RESTRICT]

SCHEMA
REVOKE [GRANT OPTION FOR]
    {{CREATE | USAGE} [,...] | ALL [PRIVILEGES]}
    ON SCHEMA schema_name [,...]
    FROM {[GROUP] role_name | PUBLIC }[,...]
    [CASCADE | RESTRICT]

TABLE
REVOKE [GRANT OPTION FOR]
    {{SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER} [,...] | ALL [PRIVILEGES]}
    ON {[TABLE] table_name [,...] | ALL TABLES IN SCHEMA schema_name[,...]}
    FROM {[GROUP] role_name | PUBLIC }[,...]
    [CASCADE | RESTRICT]


REVOGANDO TODAS AS PERMISSÕES (SIMPLIFICADO)

REVOKE ALL ON ALL TABLES IN SCHEMA [schema] FROM [role];
REVOKE ALL ON SCHEMA [schema] FROM [role];
REVOKE ALL ON DATABASE [database] FROM [role];