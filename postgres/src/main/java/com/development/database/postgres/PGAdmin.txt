Importante para conexão

1- Liberar acesso ao cluster em postgresql.conf

2- Liberar acesso ao cluster para o usuário do banco de dados em pg_hba.conf

3- Criar/editar usuários
________________________________________________________________________________________________________________________
                                                CONCEITOS

    USERS /ROLES /GROUPS
Roles (papéis ou funções), users (usuários) e grupo de usuários são "contas", prefis de atuação em um banco de dados,
que possuem permissões em comum ou específicas.

Nas Versões anteriores do PostgreSQL 8.1, usuários e roles tinham comportamentos diferentes. Atualmente, roles e users
são alias.
É possível que roles pertençam a outras roles.


CREATE ROLE name [[WITH] option [...]]
where option can be:
|   SUPERUSER       |       NOSUPERUSER
|   CREATEDB        |       NOCREATEDB
|   CREATEROLE      |       NOCREATEROLE
|   INHERIT         |       NOINHERIT
|   LOGIN           |       NOLOGIN
|   REPLICATION     |       NOREPLICATION
|   BYPASSRLS       |       NOBYPASSRLS
|   CONNECTION LIMIT connlimit
|   [ENCRYPTED]PASSWORD 'password'  |   PASSWORD NULL
|   VALID UNTIL 'timestamp'
|   IN ROLE role_name[,...]
|   IN GROUP role_name[,...]
|   ROLE role_name[,...]
|   ADMIN role_name[,...]
|   USER role_name[,...]
|   SYSID uid


Exemplos:

CREATE ROLE administradores         CREATE ROLE professores         CREATE ROLE alunos
CREATEDB                            NOCREATEDB                      NOCREATEDB
CREATEROLE                          NOCREATEROLE                    NOCREATEROLE
INHERIT                             INHERIT                         INHERIT
NOLOGIN                             NOLOGIN                         NOLOGIN
REPLICATION                         NOBYPASSRLS                     NOBYPASSRLS
BYPASSRLS                           CONNECTION LIMIT 10;            CONNECTION LIMIT 90;
CONNECTION LIMIT -1;

________________________________________________________________________________________________________________________
                                                ADMINISTRANDO
ASSOCIAÇÃO ENTRE ROLES
Quando uma role assume permissões de outra role. Necessário a opção INHERIT.

No momento da criação da role:
* IN ROLE (passa a pertecer a role informada)
* ROLE (a role informada passa a pertencer a nova role)

ou apos a criação da role:
* GRANT [role a ser concedida] TO [role a assumir as permissões]

CREATE ROLE professores
NOCREATEDB
NOCREATEROLE
INHERIT
NOLOGIN
NOBYPASSRLS
CONNECTION LIMIT -1;

CREATE ROLE daniel LOGIN CONNECTION LIMIT 1 PASSWORD '123' IN ROLE professores;
-> A role daniel passa a assumir as permissoes da role professores.

CREATE ROLE daniel LOGIN CONNECTION LIMIT 1 PASSWORD '123' ROLE professores;
-> A role professores passa a fazer parte da role daniel assumindo suas permissoes.

CREATE ROLE daniel LOGIN CONNECTION LIMIT 1 PASSWORD '123';
GRANT professores TO daniel;


DESASSOCIAÇÃO ENTRE ROLES

REVOKE [role que será revogada] FROM [role que terá suas permissões revogadas]
REVOKE professores FROM daniel;


ALTERAÇÃO DE ROLE

ALTER ROLE role-specification [WITH] option [...]
where option can be:
|   SUPERUSER       |       NOSUPERUSER
|   CREATEDB        |       NOCREATEDB
|   CREATEROLE      |       NOCREATEROLE
|   INHERIT         |       NOINHERIT
|   LOGIN           |       NOLOGIN
|   REPLICATION     |       NOREPLICATION
|   BYPASSRLS       |       NOBYPASSRLS
|   CONNECTION LIMIT connlimit
|   [ENCRYPTED]PASSWORD 'password'  |   PASSWORD NULL
|   VALID UNTIL 'timestamp'


EXCLUSÃO DE ROLE

DROP ROLE role_specification;

________________________________________________________________________________________________________________________
                                                ADMINISTRANDO ACESSOS

GRANT
São os privilégios de acesso aos objetos do banco de dados.

PRIVILÉGIOS:
--tabela                --function
--coluna                --language
--sequence              --large object
--database              --schema
--domain                --tablespace
--foreign data wrapper  --type
--foreign server


DATABASE
GRANT {{CREATE | CONNECT | TEMPORARY | TEMP} [,...] | ALL [PRIVILEGES]}
    ON DATABASE database_name[,...]
    TO role_specification[,...][WITH GRANT OPTION]

SCHEMA
GRANT {{CREATE | USAGE} [,...] | ALL [PRIVILEGES]}
    ON SCHEMA database_name[,...]
    TO role_specification[,...][WITH GRANT OPTION]

TABLE
GRANT {{SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER} [,...] | ALL [PRIVILEGES]}
    ON {[TABLE] table_name[,...] | ALL TABLES IN SCHEMA [,...] }
    TO role_specification[,...][WITH GRANT OPTION]


REVOKE
Retira as permissões da role

DATABASE
REVOKE [GRANT OPTION FOR]
    {{CREATE | CONNECT TEMPORARY | TEMP} [,...] | ALL [PRIVILEGES]}
    ON DATABASE database_name [,...]
    FROM {[GROUP] role_name | PUBLIC }[,...]
    [CASCADE | RESTRICT]

SCHEMA
REVOKE [GRANT OPTION FOR]
    {{CREATE | USAGE} [,...] | ALL [PRIVILEGES]}
    ON SCHEMA schema_name [,...]
    FROM {[GROUP] role_name | PUBLIC }[,...]
    [CASCADE | RESTRICT]

TABLE
REVOKE [GRANT OPTION FOR]
    {{SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER} [,...] | ALL [PRIVILEGES]}
    ON {[TABLE] table_name [,...] | ALL TABLES IN SCHEMA schema_name[,...]}
    FROM {[GROUP] role_name | PUBLIC }[,...]
    [CASCADE | RESTRICT]


REVOGANDO TODAS AS PERMISSÕES (SIMPLIFICADO)

REVOKE ALL ON ALL TABLES IN SCHEMA [schema] FROM [role];
REVOKE ALL ON SCHEMA [schema] FROM [role];
REVOKE ALL ON DATABASE [database] FROM [role];


________________________________________________________________________________________________________________________
                                                ADMINISTRANDO ACESSOS
DATABASE, SCHEMAS E OBJETOS

DATABASE
É o banco de dados.

CREATE DATABASE name
[[WITH] [OWNER [=] user_name]
    [TEMPLATE [=] template]
    [ENCODING [=] encoding]
    [LC_COLLATE [=] lc_collate]
    [LC_CTYPE [=] lc_ctype]
    [TABLESPACE [=] tablespace_name]
    [ALLOW_CONNECTIONS [=] allowconn]
    [CONNECTION LIMIT [=] connlimit]
    [IS-TEMPLATE [=] istemplate]]


ALTER DATABASE name RENAME TO new_name
ALTER DATABASE name OWNER TO {new_owner | CURRENT_USER | SESSION_USER}
ALTER DATABASE name SET TABLESPACE new_tablespace

DROP DATABASE [nome]


SCHEMA
CREATE SCHEMA schema_name [AUTHORIZATION role_specification]

ALTER SCHEMA name RENAME TO new_name
ALTER SCHEMA name OWNER TO {new_owner | CURRENT_USER | SESSION_USER}

DROP SCHEMA [nome]

MELHORES PRATICAS
CREATE SCHEMA IF NOT EXISTS schema_name [AUTORIZATION role_specification]
DROP SCHEMA IF EXISTS [nome];



TABELAS, COLUNAS E TIPOS DE DADOS
Conjuntos de dados dispostos em colunas e linhas referentes a um objetivo comum.
As colunas são consideradas como "campos da tabela", como atributos da tabela.
As linhas de uma tabela são chamadas também de tuplas, e é onde estão contidos os valores, os dados

EXEMPLO
TABELA = automovel
COLUNA 1 = tipo (carro, moto, aviao, helicoptero)
COLUNA 2 = ano_fabricacao (2010, 2011, 2020)
COLUNA 3 = capacidade_pessoas (1, 2, 350)
COLUNA 4 = fabricante (Honda, Avianca, Yamaha)

TABELA = produto
COLUNA 1 = codigo serial do produto
COLUNA 2 = tipo (vestuario, eletronico, beleza)
COLUNA 3 = preco

PRIMARY KEY / CHAVE PRIMARIA / PK
No conceito de modelo de dados relacional e obedecendo às regras de normalização, uma PK é um conjunto de um ou mais cam
pos que nunca se repetem em uma tabela e que seus valores garantem a integridade do dado único e a utilização do mesmo
como referência para o relacionamento entre as demais tabelas.

    * Não pode haver duas ocorrências der uma mesma entidade com o mesmo conteúdo na PK.
    * A chave primária não pode ser composta por atributo opcional, ou seja, atributo que aceite nulo.
    * Os atributos identificadores devem ser o conjunto mínimo que pode identificar cada instância de uma entidade.
    * Não devem ser usadas chaves externas.
    * não deve conter informação volátil.


FOREIGN KEY / CHAVE ESTRANGEIRA /FK
Campo ou conjunto de campos que são referências de chaves primárias de outras tabelas ou da mesma tabela. Sua principal
função é garantir a integridade referencial entre as tabelas.

Numeric Types                               UUID Type
Monetary Types                              XML Type
Character Types                             JSON types
Binary Data Types                           Arrays
Date/Time Types                             Composite Types
Boolean Type                                Range Types
Enumerated Types                            Domain Types
Geometric Types                             Object Identifier Types
Network Address Types                       pg_Isn Type
Bit String Types                            Pseudo-Types
Text Search Types

Numéricos

|Name                                   |Storage Size        |Description                       |Range
________________________________________________________________________________________________________________________
|smallint                               |2 bytes             |small-range integer             | -32768 to +32767
|integer                                |4 bytes             |typical choice for integer      | -2147483648 to +2147483647
|bigint                                 |8 bytes             |large-range integer             | -9223372036854775808 to +9223372036854775807
|decimal                                |variable            |user-specified precision, exact | up to 131072 digits before the decimal point; up to 16383 digits after the decimal point;
|numeric                                |variable            |user-specified precision, exact | up to 131072 digits before the decimal point; up to 16383 digits after the decimal point;
|real                                   |4 bytes             |variable-precision, inexact     | 6 decimal digits precision
|double precision                       |8 bytes             |variable-precision, inexact     | 15 decimal digits precision
|smallserial                            |2 bytes             |small autoincrementing integer  | 1 to +32767
|serial                                 |4 bytes             |autoincrementing integer        | 1 to +2147483647
|bigserial                              |4 bytes             |large autoincrementing integer  | 1 to +9223372036854775807
|character varying(n), varchar(n)       |                    |variable-length with limit      |
|character(n), char(n)                  |                    |fixed-length, blank padded      |
|text                                   |                    |variable unlimited length       |
